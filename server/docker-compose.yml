version: '3.8'

services:
  postgres-users:
    image: postgres:15-alpine
    container_name: postgres-users
    environment:
      POSTGRES_DB: ${DB_NAME_USERS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
      - ./init-scripts/init-users.sql:/docker-entrypoint-initdb.d/init-users.sql
    networks:
      - trello-net

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: boards
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - trello-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/boards --quiet
      interval: 10s
      timeout: 10s
      retries: 5


  user-service:
    build:
      context: ./server/user-service
    container_name: user-service
    env_file:
      - ./server/user-service/.env
    ports:
      - "${USER_SERVICE_PORT}:8081"
    depends_on:
      postgres-users:
        condition: service_healthy
    networks:
      - trello-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  board-service:
    build:
      context: ./server/board-service
    container_name: board-service
    env_file:
      - ./server/board-service/.env
    ports:
      - "${BOARD_SERVICE_PORT}:8082"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - trello-net

volumes:
  postgres_users_data:
  mongodb_data:

networks:
  trello-net:
    driver: bridge